@model List<MediaFile>
@{
    ViewData["Title"] = "Brand list";
    Layout = "~/Views/Shared/_Dashboard.cshtml";
}


<div class="container-fluid">
    <div class="row">
        <div class="col-12 mt-3">
            <h2>Upload Media</h2>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-4 border-end vh-100">
            @Html.Partial("_UploadPartial")
        </div>
        <div class="col-8">
            @if(Model == null || !Model.Any()){
                <h2 class="text-center">No Content found.</h2>
            }else{
                <div class="grid-container my-2">
                @foreach(var file in Model){
                <div class="cards card rounded shadow-sm">
                    @* <img class="w-100 rounded-top-2" src={URL.createObjectURL(item)} alt="img" /> *@
                    <span onClick="deleteFile(@file.Id)" class="position-absolute rounded end-0 top-0 me-1 mt-1">
                        <i class="bi bi-x-circle bg-light px-1 rounded"></i>
                    </span>
                    <img class=" rounded" title="" src="@file.filePath" onError="(e)=> e.target.style.display = 'none'"/>
                </div>
                }
            </div>
            }
            
        </div>
    </div>
</div>

<script>
    async function deleteFile(id) {
        const res = await axios.delete(`Media/Delete/${id}`);
        if (res.data.status === "success") {
            await successToast(`${id} deleted successfully!`);
            setInterval(() => {
                window.location.reload();
            } , 1000);
            //window.location.href = "/Media";
            //window.location.reload();
        } else {
            errorToast(res.data.message);
        }
}
</script>