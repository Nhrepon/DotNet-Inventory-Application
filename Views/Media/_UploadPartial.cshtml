@{
    ViewData["Title"] = "File Upload";
}

<h2 class="fs-4 text-center">@ViewData["Title"]</h2>

<div class="container">
    <div class="row">
        <div class="col-12">
            <div class="card shadow-lg p-5 gap-4">
                <input id="file" class="form-control" type="file" accept="image/*" onChange="previewImage(event)"
                    name="file" />
                <button onClick="uploadFile()" class="btn btn-success">Upload Media</button>
            </div>
            <div id="imagePreviewBox" class="my-4 position-relative d-none" style="columns:2, columnGap:15px">
                <div class="card rounded shadow mb-3">
                    <span onClick="removeItem()" class="position-absolute bg-light px-1 rounded end-0 me-1 mt-1">
                        <i class="bi bi-x-square-fill"></i>
                    </span>
                    <img id="imagePreview" src="" alt="Image Preview" class="card-img img-fluid" />
                </div>

            </div>
        </div>
    </div>
</div>


<script>
    function previewImage(event) {
        var reader = new FileReader();
        reader.onload = function () {
            var output = document.getElementById('imagePreview');
            output.src = reader.result;
            document.getElementById("imagePreviewBox").classList.remove("d-none");
        }
        reader.readAsDataURL(event.target.files[0]);
    }

    function removeItem() {
        document.getElementById("file").value = "";
        document.getElementById("imagePreviewBox").remove();
    }

    async function uploadFile() {
        try {
            let files = document.getElementById("file").files;
            if (files.length == 0) {
                errorToast("Please, Select images");
            } else {
                let formData = new FormData();
                for (const file of files) {
                    formData.append("file", file);
                }
                let response = await axios.post("/Media/upload", formData, { headers: { 'Content-Type': 'multipart/form-data' } });
                if (response.data.status === "success") {
                    successToast(response.data["message"]);
                    //window.location.href = "/Media";
                    setInterval(() => {
                        window.location.reload();
                    }, 1000);
                    
                } else {
                    errorToast(response.data["message"]);
                }
            }
        } catch (e) {
            errorToast(e.message);
        }
    }
</script>