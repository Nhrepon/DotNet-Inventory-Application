@model ProductDto
@{
    Layout = "~/Views/Shared/_Dashboard.cshtml";
    ViewData["Title"] = "Update Product";
}


<div class="container">
    <div class="row">
        <div class="col-12 text-center">
            <h3>@ViewData["Title"]</h3>
        </div>
    </div>
    <hr />
    <div class="row">
            <div class="col-sm-8 d-flex flex-column gap-3">
                <div class="form-group">
                    @* Product Id: <span asp-for="Product.Id" id="id">@Model.Product.Id</span> *@
                    <input asp-for="Product.Id" id="id" class="form-control" type="text"/>
                </div>
                <div class="form-group">
                    <label>Product Title:</label>
                    <input asp-for="Product.Title" id="title" class="form-control" type="text"
                        placeholder="Product Name" />
                </div>
                <div class="form-group">
                    <label>Product Description:</label>
                    <textarea asp-for="Product.Description" id="description" rows="5" class="form-control" type="text"
                        placeholder="Product Description"></textarea>
                </div>
                <div class="form-group row">
                    <div class="col-sm-6 d-flex align-items-center gap-3">
                        <label>Price: </label>
                        <input asp-for="Product.Price" id="price" class="form-control" type="number"
                            placeholder="Product Price" />
                    </div>
                    <div class="col-sm-6 d-flex align-items-center gap-3">
                        <label>Quantity: </label>
                        <input asp-for="Product.Quantity" id="quantity" class="form-control" type="number"
                            placeholder="Product Quantity" />
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-6 d-flex align-items-center gap-3">
                        <label>Color: </label>
                        <input asp-for="Product.Color" id="color" class="form-control" type="text"
                            placeholder="Product Color" />
                    </div>
                    <div class="col-sm-6 d-flex align-items-center gap-3">
                        <label>Size: </label>
                        <input asp-for="Product.Size" id="size" class="form-control" type="text"
                            placeholder="Product Size" />
                    </div>
                </div>
                <div class="form-group">
                    <label>SKU:</label>
                    <input id="sku" class="form-control" type="text"
                        placeholder="SKU" />
                </div>

            </div>
            <div class="col-sm-4 d-flex flex-column gap-3">
                <div class="form-group">
                    <label class="">Select Brands</label>
                    <select asp-for="Product.BrandId" asp-items="Model.BrandOptions" name="brand" id="brand"
                        class="form-control">
                        <option value="">Select Brands</option>
                    </select>
                </div>
                <div class="form-group">
                    <label class="">Select Category</label>
                    <select asp-for="Product.CategoryId" asp-items="Model.CategoryOptions" name="category" id="category"
                        class="form-control">
                        <option value="">Select Category</option>
                    </select>
                </div>
                <div class="form-group">
                    <label class="">Select Product Image</label>
                    @* @await Html.PartialAsync("../Media/_FilePicker.cshtml") *@
                    <partial name="../Media/_FilePicker.cshtml" />
                    <input asp-for="Product.Image" id="image" class="form-control" type="text"
                        placeholder="Image path" />
                    <img id="productImage" src="@Model.Product.Image" alt="Product Image" style="max-width: 200px;"
                        onError="(e)=> e.target.style.display = 'none'" />

                </div>
            </div>
            <div class="col-12">
                <button onClick="productUpdate()" class="btn btn-primary my-4">Update</button>
            </div>
    </div>
</div>

<script>
    async function productUpdate() {
        var id = document.getElementById("id").value;
        var title = document.getElementById("title").value;
        var brand = document.getElementById("brand").value;
        var category = document.getElementById("category").value;
        var description = document.getElementById("description").value;
        var image = document.getElementById("image").value;
        var color = document.getElementById("color").value;
        var size = document.getElementById("size").value;
        var quantity = document.getElementById("quantity").value;
        var price = document.getElementById("price").value;
        var sku = document.getElementById("sku").value;

        if (title == "") {
            errorToast("Product title required!");
        } else if (brand == "") {
            errorToast("Please, Select a brand name!");
        } else if (category == "") {
            errorToast("Please, Select a category name!");
        }else{

            let data = {
            "Title" : title,
            "Description" : description,
            "Image" : image,
            "Color" : color,
            "Size" : size,
            "Quantity" : quantity,
            "Price" :price,
            "Sku" : sku,
            "CategoryId" : parseInt(category),
            "BrandId" : parseInt(brand),
            "UserId" : 1
            }

            let res = await axios.put(`/Product/${id}`, data, { headers: { 'Content-Type': 'application/json' } });
            if(res.data.status === "success"){
                successToast("Product Updated successfully!");
                setInterval(() => {
                    window.location.href = "/Product/product-list";
                }, 1000);
            }else{
                errorToast(res.data.message);
            }
    }
    
    
    
    }
</script>
